# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MenuCategoryEntity {
  """Unique ID of menu category"""
  id: String!

  """Name of category"""
  name: String!
}

type Role {
  name: String!
}

type SignUpOutput {
  id: ID!

  """User phone number"""
  phone: String!

  """User email"""
  email: String

  """User firstname"""
  firstname: String!

  """User lastname"""
  lastname: String

  """User surname"""
  surname: String

  """User role"""
  role: Role

  """User creation date"""
  createdAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CompanyEntity {
  id: ID!

  """Company name"""
  companyName: String!

  """Company address"""
  address: String!

  """Company inn"""
  inn: String!

  """Company creation date"""
  createdAt: DateTime
}

type CompanySignUpOutput {
  """User data"""
  user: SignUpOutput!

  """Company data"""
  company: CompanyEntity!
}

type UserEntity {
  id: ID!

  """User phone number"""
  phone: String!

  """User email"""
  email: String!

  """User first name"""
  firstname: String!

  """User last name"""
  lastname: String!

  """User surname"""
  surname: String!

  """User role"""
  role: Role

  """User creation date"""
  createdAt: DateTime
}

type SignInOutput {
  """JWT access token"""
  accessToken: String!

  """User data"""
  user: UserEntity!
}

type Query {
  menuCategories: [MenuCategoryEntity!]!
}

type Mutation {
  createMenuCategory(createMenuCategoryInput: CreateMenuCategoryInput!): MenuCategoryEntity!
  signUp(signUpInput: SignUpInput!): SignUpOutput!
  companySignUp(companySignUpInput: CompanySignUpInput!): CompanySignUpOutput!
  signIn(signInInput: SignInInput!): SignInOutput!
}

input CreateMenuCategoryInput {
  """Name of menu category"""
  name: String!
}

input SignUpInput {
  phone: String!
  email: String!
  firstname: String!
  lastname: String!
  surname: String
  password: String!
  confirmPassword: String!
}

input CompanySignUpInput {
  phone: String!
  email: String!
  firstname: String!
  lastname: String!
  surname: String
  password: String!
  confirmPassword: String!
  companyName: String!
  inn: String!
  address: String!
}

input SignInInput {
  phone: String!
  password: String!
}